library(lavaan)
str(valores_pi)
### Análise de TRI ###
install.packages(psych)
### Análise de TRI ###
install.packages("psych")
install.packages("GPArotation")
library(psych)
### Chamando o banco
library(readr)
EVB_ECB_PIBIC_2019 <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/EVB_ECB_PIBIC_2019.dat",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(EVB_ECB_PIBIC_2019)
vars_BF<-c("X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X24") #selecionando os itens do BF
BF_fator<-EVB_ECB_PIBIC_2019[vars_BF] #criando um novo banco para o fator BF
install.packages("mirt")
### Chamando o banco
library(readr)
EVB_ECB_PIBIC_2019 <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC_2019.dat",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(EVB_ECB_PIBIC_2019)
vars_BF<-c("X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X24") #selecionando os itens do BF
BF_fator<-EVB_ECB_PIBIC_2019[vars_BF] #criando um novo banco para o fator BF
install.packages("mirt")
library(mirt)
mod1 <-mirt(BF_fator, 1, itemtype = 'graded') #Criando o modelo
E
EVB_ECB_PIBIC_2019 <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC_2019.dat",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
ECB <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC_2019.dat",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(ECB)
### Chamando o banco
library(readr)
ECB <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC.dat",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
### Chamando o banco
library(readr)
ECB <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC.dat",
"\t", escape_double =FALSE, col_names =FALSE,
trim_ws = TRUE)
View(ECB)
### Chamando o banco
library(readr)
ECB <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC.dat",
"\t", escape_double =FALSE, col_names =FALSE,
trim_ws = TRUE)
View(ECB)
### Análise de TRI ###
install.packages("psych")
install.packages("GPArotation")
library(psych)
library(GPArotation)
### Chamando o banco
library(readr)
ECB <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC_2019.dat",
"\t", escape_double =FALSE, col_names =FALSE,
trim_ws = TRUE)
View(ECB)
vars_BF<-c("X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X24") #selecionando os itens do BF
View(ECB)
BF_fator<-ECB[vars_BF] #criando um novo banco para o fator BF
View(BF_fator)
install.packages("mirt")
library(mirt)
mod1 <-mirt(BF_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod1, simplify=TRUE, IRTpars=TRUE) # gerando parametros dos itens
plot(mod1, type='trace')
plot(mod1, type='infotrace')
plot(mod1, type='info')
areainfo(mod1, c(-4,4)) ### all items (total test information)
areainfo(mod1, c(-4,4), which.items = 1) ### items 1 to 11
areainfo(mod1, c(-4,4), which.items = 2)
areainfo(mod1, c(-4,4), which.items = 3)
areainfo(mod1, c(-4,4), which.items = 4)
areainfo(mod1, c(-4,4), which.items = 5)
areainfo(mod1, c(-4,4), which.items = 6)
areainfo(mod1, c(-4,4), which.items = 7)
areainfo(mod1, c(-4,4), which.items = 8)
areainfo(mod1, c(-4,4), which.items = 9)
areainfo(mod1, c(-4,4), which.items = 10)
areainfo(mod1, c(-4,4), which.items = 11)
vars_BV<-c("X11","X12","X13","X14","X15","X16") #selecionando os itens do fator BV
BV_fator<-EVB_ECB_PIBIC_2019[vars_BV] #criando um novo banco para o fator BR
BV_fator<-ECB[vars_BV] #criando um novo banco para o fator BR
library(mirt)
mod2 <-mirt(BV_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod2, simplify=TRUE, IRTpars=TRUE) # gerando os parametros dos itens
plot(mod2, type='trace')
plot(mod2, type='infotrace')
plot(mod2, type='info')
areainfo(mod2, c(-4,4)) # all items (total test information)
areainfo(mod2, c(-4,4), which.items = 1) #items 1 to 6
areainfo(mod2, c(-4,4), which.items = 2)
areainfo(mod2, c(-4,4), which.items = 3)
areainfo(mod2, c(-4,4), which.items = 4)
areainfo(mod2, c(-4,4), which.items = 5)
areainfo(mod2, c(-4,4), which.items = 6)
vars<-c("X17","X18","X19","X20","X29") # selecionando itens do fator BR
BR_fator<-ECB[vars] #criando um novo banco para o fator BR
library(mirt)
mod3 <-mirt(BR_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod3, simplify=TRUE, IRTpars=TRUE) # verificando os parametros dos itens
plot(mod3, type='trace')
plot(mod3, type='infotrace')
plot(mod3, type='info')
areainfo(mod3, c(-4,4)) ## all items (total test information)
areainfo(mod3, c(-4,4), which.items = 1) #items 1 to 5
areainfo(mod3, c(-4,4), which.items = 2)
areainfo(mod3, c(-4,4), which.items = 3)
areainfo(mod3, c(-4,4), which.items = 4)
areainfo(mod3, c(-4,4), which.items = 5)
vars_CB <-c("X21","X22","X23","X25","X26","X27","X28","X30") # selecionando dos itens do fator CB
CB_fator<-ECB[vars_CB] #criando um novo banco para o fator CB
library(mirt)
mod4 <-mirt(CB_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod4, simplify=TRUE, IRTpars=TRUE) # verificando os parametros dos itens
plot(mod4, type='trace')
plot(mod4, type='infotrace')
plot(mod4, type='info')
areainfo(mod4, c(-4,4)) # all items (total test information)
areainfo(mod4, c(-4,4), which.items = 1) #items 1 to 8
areainfo(mod4, c(-4,4), which.items = 2)
areainfo(mod4, c(-4,4), which.items = 3)
areainfo(mod4, c(-4,4), which.items = 4)
areainfo(mod4, c(-4,4), which.items = 5)
areainfo(mod4, c(-4,4), which.items = 6)
areainfo(mod4, c(-4,4), which.items = 7)
areainfo(mod4, c(-4,4), which.items = 8)
View(CB_fator)
### Análise Fatorial Confirmatória EVB ###
install.packages("lavaan")
library(lavaan)
data(EVB_ECB_PIBIC_2019)[1] <- "V1"
data(ECB)[1] <- "V1"
data(ECB)[1] <- "V1"
names(ECB) [1] <- "f1"
comp_bullying <- '	fisico =~ 01 + 02 + 03 + 04 + 05 + 06 + 07 + 08 + 09 + 10 + 24
verbal =~ 11 + 12 + 13 + 14 + 15 + 16
relacional =~ 17 + 18 + 19 + 20 + 29
cyberbullying =~ 21 + 22 + 23 + 25 + 26 + 27 + 28 + 30'
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
data(ECB)
## configurando o modelo
help("names")
names(ECB) [1] <- "f1"
comp_bullying <- 'fisico =~ X1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
View(ECB)
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
comp_bullying <- 'fisico =~ f1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
summary(mod1_bullying, fit.measures = TRUE, standardized=TRUE)
summary(comp_bullying, fit.measures = TRUE, standardized=TRUE)
## gerarando figura CFA
library(semPlot)
semPaths(comp_bullying, what='std', residuals=FALSE, nCharNodes=0, edge.label.cex=1, legend=FALSE)
library(semTools)
## Alfa e Omega
install.packages("semTools")
## Alfa e Omega
install.packages("semTools")
library(semTools)
#####   Sintaxe PIBIC (2019)   #####
### Análise de TRI ###
install.packages("psych")
install.packages("GPArotation")
library(psych)
library(GPArotation)
### Chamando o banco
library(readr)
ECB <- read_delim("C:/Users/Ícaro Macedo/Desktop/Iniciações Científicas/2019 - Iniciação Científica PIBIC-UFPI/Directory_PIBIC_2019/ECB_PIBIC_2019.dat",
"\t", escape_double =FALSE, col_names =FALSE,
trim_ws = TRUE)
View(ECB)
### Criando banco para fator Bullying Físico ###
vars_BF<-c("X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X24") #selecionando os itens do BF
BF_fator<-ECB[vars_BF] #criando um novo banco para o fator BF
install.packages("mirt")
library(mirt)
mod1 <-mirt(BF_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod1, simplify=TRUE, IRTpars=TRUE) # gerando parametros dos itens
plot(mod1, type='trace')
plot(mod1, type='infotrace')
plot(mod1, type='info')
areainfo(mod1, c(-4,4)) ### all items (total test information)
areainfo(mod1, c(-4,4), which.items = 1) ### items 1 to 11
areainfo(mod1, c(-4,4), which.items = 2)
areainfo(mod1, c(-4,4), which.items = 3)
areainfo(mod1, c(-4,4), which.items = 4)
areainfo(mod1, c(-4,4), which.items = 5)
areainfo(mod1, c(-4,4), which.items = 6)
areainfo(mod1, c(-4,4), which.items = 7)
areainfo(mod1, c(-4,4), which.items = 8)
areainfo(mod1, c(-4,4), which.items = 9)
areainfo(mod1, c(-4,4), which.items = 10)
areainfo(mod1, c(-4,4), which.items = 11)
###  Criando banco para fator Bullying Verbal  ###
vars_BV<-c("X11","X12","X13","X14","X15","X16") #selecionando os itens do fator BV
BV_fator<-ECB[vars_BV] #criando um novo banco para o fator BR
install.packages(mirt)
library(mirt)
mod2 <-mirt(BV_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod2, simplify=TRUE, IRTpars=TRUE) # gerando os parametros dos itens
plot(mod2, type='trace')
plot(mod2, type='infotrace')
plot(mod2, type='info')
areainfo(mod2, c(-4,4)) # all items (total test information)
areainfo(mod2, c(-4,4), which.items = 1) #items 1 to 6
areainfo(mod2, c(-4,4), which.items = 2)
areainfo(mod2, c(-4,4), which.items = 3)
areainfo(mod2, c(-4,4), which.items = 4)
areainfo(mod2, c(-4,4), which.items = 5)
areainfo(mod2, c(-4,4), which.items = 6)
###  Criando banco para fator Bullying Relacional  ###
vars<-c("X17","X18","X19","X20","X29") # selecionando itens do fator BR
BR_fator<-ECB[vars] #criando um novo banco para o fator BR
install.packages(mirt)
library(mirt)
mod3 <-mirt(BR_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod3, simplify=TRUE, IRTpars=TRUE) # verificando os parametros dos itens
plot(mod3, type='trace')
plot(mod3, type='infotrace')
plot(mod3, type='info')
areainfo(mod3, c(-4,4)) ## all items (total test information)
areainfo(mod3, c(-4,4), which.items = 1) #items 1 to 5
areainfo(mod3, c(-4,4), which.items = 2)
areainfo(mod3, c(-4,4), which.items = 3)
areainfo(mod3, c(-4,4), which.items = 4)
areainfo(mod3, c(-4,4), which.items = 5)
###  Criando banco para fator Cyberbullying  ###
vars_CB <-c("X21","X22","X23","X25","X26","X27","X28","X30") # selecionando dos itens do fator CB
CB_fator<-ECB[vars_CB] #criando um novo banco para o fator CB
install.packages(mirt)
library(mirt)
mod4 <-mirt(CB_fator, 1, itemtype = 'graded') #Criando o modelo
coef(mod4, simplify=TRUE, IRTpars=TRUE) # verificando os parametros dos itens
plot(mod4, type='trace')
plot(mod4, type='infotrace')
plot(mod4, type='info')
areainfo(mod4, c(-4,4)) # all items (total test information)
areainfo(mod4, c(-4,4), which.items = 1) #items 1 to 8
areainfo(mod4, c(-4,4), which.items = 2)
areainfo(mod4, c(-4,4), which.items = 3)
areainfo(mod4, c(-4,4), which.items = 4)
areainfo(mod4, c(-4,4), which.items = 5)
areainfo(mod4, c(-4,4), which.items = 6)
areainfo(mod4, c(-4,4), which.items = 7)
areainfo(mod4, c(-4,4), which.items = 8)
### Análise Fatorial Confirmatória EVB ###
install.packages("lavaan")
library(lavaan)
## configurando o modelo
names(ECB) [1] <- "f1"
comp_bullying <- 'fisico =~ f1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
summary(comp_bullying, fit.measures = TRUE, standardized=TRUE)
## gerarando figura CFA
library(semPlot)
semPaths(comp_bullying, what='std', residuals=FALSE, nCharNodes=0, edge.label.cex=1, legend=FALSE)
##png("VB.png", res = 500, units = 'cm', width = 15, height = 15) ###
##semPaths(comp_bullying,"std", layout = "spring", sizeMan = 3, sizeLat = 5, mar=c(1,1,1,1), minimum = 0.2, edge.label.cex = 0.5, cut = 0.7, residuals = FALSE, intercepts = FALSE, thresholds = FALSE)
dev.off()###
## Alfa e Omega
install.packages("semTools")
library(semTools)
reliability(comp_bullying)
## gerarando figura CFA
library(semPlot)
semPaths(comp_bullying, what='std', residuals=FALSE, nCharNodes=0, edge.label.cex=1, legend=FALSE)
png("VB.png", res = 500, units = 'cm', width = 15, height = 15)
semPaths(comp_bullying,"std", layout = "spring", sizeMan = 3, sizeLat = 5, mar=c(1,1,1,1), minimum = 0.2, edge.label.cex = 0.5, cut = 0.7, residuals = FALSE, intercepts = FALSE, thresholds = FALSE)
dev.off()
## gerarando figura CFA
library(semPlot)
png("VB.png", res = 500, units = 'cm', width = 15, height = 15)
semPaths(comp_bullying,"std", layout = "spring", sizeMan = 3, sizeLat = 5, mar=c(1,1,1,1), minimum = 0.2, edge.label.cex = 0.5, cut = 0.7, residuals = FALSE, intercepts = FALSE, thresholds = FALSE)
### Invariancia via Lavaan por equaltesteMI
install.packages("equaltestMI")
library(equaltestMI)
### Invariancia via Lavaan por equaltesteMI
install.packages("RItools")
install.packages("equaltestMI")
library(equaltestMI)
data(ECB)
names(ECB)
names(ECB) [1] <- "f1"
Comp_B <- 'fisico =~ f1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
run.sem1 <- eqMI.semtest(model = Vit_B, data = ECB, estimator = "WLSMV",
orthogonal = FALSE, group = "Sexo", meanstructure = TRUE,
ordered=c("f1","X3","X4", "X9", "X12", "X14", "X11", "X15", "X17", "X20", "X19", "X18", "X26", "X21", "X27", "X28")
)
run.sem1 <- eqMI.semtest(model = Comp_B, data = ECB, estimator = "WLSMV",
orthogonal = FALSE, group = "Sexo", meanstructure = TRUE,
ordered=c("f1","X3","X4", "X9", "X12", "X14", "X11", "X15", "X17", "X20", "X19", "X18", "X26", "X21", "X27", "X28")
)
names(ECB)
Comp_B <- 'fisico =~ f1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
run.sem1 <- eqMI.semtest(model = Comp_B, data = ECB, estimator = "WLSMV",
orthogonal = FALSE, group = "Sexo", meanstructure = TRUE,
ordered=c("f1","X3","X4", "X9", "X12", "X14", "X11", "X15", "X17", "X20", "X19", "X18", "X26", "X21", "X27", "X28")
)
## gerarando figura CFA
library(semPlot)
semPaths(comp_bullying, what='std', residuals=FALSE, intercepts = FALSE, nCharNodes=0, edge.label.cex=1, legend=FALSE)
semPaths(comp_bullying, what='std',layout = "spring", sizeMan = 3, sizeLat = 5, mar = c(1,1,1,1), minimum = 0.2, edge.label.cex=1 , cut = 0.7 ,residuals=FALSE, intercepts = FALSE, nCharNodes=0, legend=FALSE)
semPaths(comp_bullying, what='std',layout = "spring", sizeMan = 3, sizeLat = 5, mar = c(2,2,2,2), minimum = 0.3, edge.label.cex=1 , cut = 0.7 , residuals=FALSE, intercepts = FALSE, nCharNodes=0, thresholds = FALSE)
semPaths(comp_bullying, what='std',layout = "spring", sizeMan = 3, sizeLat = 5, mar = c(1,1,1,1), minimum = 0.2, edge.label.cex=1 , cut = 0.8 , residuals=FALSE, intercepts = FALSE, nCharNodes=0)
parameterestimates(comp_bullying, ECB)
library(lavaan)
names(ECB) [1] <- "f1"
comp_bullying <- 'fisico =~ f1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
summary(comp_bullying, fit.measures = TRUE, standardized=TRUE, rsquare=TRUE)
parameterestimates(comp_bullying, ECB)
parameterestimates(comp_bullying, data(ECB))
parameterestimates(comp_bullying)
fitmeasures(comp_bullying)
library(lavaan)
names(ECB) [1] <- "f1"
comp_bullying <- 'fisico =~ f1 + X3 + X4 + X9
verbal =~ X12 + X14 + X11 + X15
relacional =~ X17 + X20 + X19 + X18
cyberbullying =~ X26 + X21 + X27 + X28'
## rodando o modelo
comp_bullying <- cfa(model = comp_bullying, estimator = "WLSMV", orthogonal = FALSE, data = ECB, se = "standard",test = "standard")
summary(comp_bullying, fit.measures = TRUE, standardized=TRUE, rsquare=TRUE)
## gerarando figura CFA
library(semPlot)
semPaths(comp_bullying, what='std',layout = "circle", edge.label.cex=1 , cut = 0.8 , residuals=FALSE, intercepts = FALSE, nCharNodes=0)
semPaths(comp_bullying, what='std',layout = "circle", title, edge.label.cex=1 , cut = 0.8 , residuals=FALSE, intercepts = FALSE, nCharNodes=0)
## gerarando figura CFA
library(semPlot)
semPaths(comp_bullying, what='std',layout = "circle", title = "TRUE", curvePivot = "TRUE", edge.label.cex=1 , cut = 0.8 , residuals=FALSE, intercepts = FALSE, nCharNodes=0)
